[{"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\index.js":"1","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\App.js":"2","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\reportWebVitals.js":"3","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\MovementData.js":"4","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\CounterLocation.js":"5","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\CollatedData.js":"6","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\Map.js":"7","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\DataDisplay.js":"8","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\mapStyles.js":"9"},{"size":548,"mtime":1612018628737,"results":"10","hashOfConfig":"11"},{"size":1724,"mtime":1612091003277,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1332,"mtime":1612027654136,"results":"14","hashOfConfig":"11"},{"size":1827,"mtime":1612102414002,"results":"15","hashOfConfig":"11"},{"size":3137,"mtime":1612106727467,"results":"16","hashOfConfig":"11"},{"size":3522,"mtime":1612051012214,"results":"17","hashOfConfig":"11"},{"size":653,"mtime":1612047906878,"results":"18","hashOfConfig":"11"},{"size":3762,"mtime":1612051156851,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sglij7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\index.js",[],["40","41"],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\App.js",[],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\reportWebVitals.js",[],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\MovementData.js",[],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\CounterLocation.js",["42"],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\CollatedData.js",["43"],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\Map.js",["44"],"import React, { useState } from \"react\";\r\nimport { GoogleMap, Marker } from \"react-google-maps\";\r\nimport CounterLocations from \"../trafficCounterLocationData.json\";\r\nimport DataDisplay from \"./DataDisplay\";\r\nimport redDot from \"../images/redDot.svg\";\r\nimport { mapStyles } from \"./../mapStyles\";\r\n\r\nfunction Map() {\r\n  const [selectedData, setSelectedData] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        defaultZoom={12}\r\n        defaultCenter={{ lat: 55.854434529999814, lng: -4.216974959509279 }}\r\n        defaultOptions={{ styles: mapStyles }}>\r\n        {CounterLocations.d2LogicalModel.payloadPublication.measurementSiteTable.measurementSiteRecord.map(\r\n          (counter) => (\r\n            <Marker\r\n              key={counter[\"@id\"]}\r\n              position={{\r\n                lat: parseFloat(\r\n                  counter.measurementSiteLocation.tpeglinearLocation.to\r\n                    .pointCoordinates.latitude\r\n                ),\r\n                lng: parseFloat(\r\n                  counter.measurementSiteLocation.tpeglinearLocation.to\r\n                    .pointCoordinates.longitude\r\n                ),\r\n              }}\r\n              onMouseOver={() => {\r\n                setSelectedData(counter);\r\n              }}\r\n              onMouseOut={() => {\r\n                setSelectedData(false);\r\n              }}\r\n              //   icon={{\r\n              //     url: redCar,\r\n              //     scaledSize: new window.google.maps.Size(15, 15),\r\n              //   }}\r\n            />\r\n          )\r\n        )}\r\n        {selectedData && (\r\n          <div>\r\n            <DataDisplay\r\n              id={selectedData[\"@id\"]}\r\n              fromDescription={\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.from\r\n                  .name.descriptor.value\r\n              }\r\n              toDescription={\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.to.name\r\n                  .descriptor.value\r\n              }\r\n              fromLat={parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.from\r\n                  .pointCoordinates.latitude\r\n              )}\r\n              toLat={parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.to\r\n                  .pointCoordinates.latitude\r\n              )}\r\n              fromLong={parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.from\r\n                  .pointCoordinates.longitude\r\n              )}\r\n              toLong={parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.to\r\n                  .pointCoordinates.longitude\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* {selectedData && (\r\n          <InfoWindow\r\n            position={{\r\n              lat: parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.to\r\n                  .pointCoordinates.latitude\r\n              ),\r\n              lng: parseFloat(\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.to\r\n                  .pointCoordinates.longitude\r\n              ),\r\n            }}>\r\n            <div>\r\n              <h6>To: </h6>\r\n              {\r\n                selectedData.measurementSiteLocation.tpeglinearLocation.from\r\n                  .name.descriptor.value\r\n              }\r\n            </div>\r\n          </InfoWindow>\r\n        )} */}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\Components\\DataDisplay.js",[],"C:\\Users\\SS4A\\Desktop\\Software-Dev-Work\\dev\\react-projects\\traffic-api\\src\\mapStyles.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":11,"column":6,"nodeType":"55","endLine":11,"endColumn":8,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":14},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCollatedData' and 'locationData'. Either include them or remove the dependency array.","ArrayExpression",["60"],"'redDot' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [getCollatedData, locationData]",{"range":"63","text":"64"},[381,383],"[getCollatedData, locationData]"]